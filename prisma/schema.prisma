// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String  @id
  firstname String
  lastname  String
  email     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  forum Forum[]
  post Post[]
  vote Vote[]


}

model Forum {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String
  user        User     @relation(fields: [userId], references: [id])

  post Post[]
}

model Post {
  id String @id @default(uuid())
  title String
  content String?
  postImage String?

  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  forumName String
  forum Forum @relation(fields: [forumName], references: [name])

  userId String
  user User @relation(fields: [userId], references: [id])

  vote Vote[]

}

enum TypeOfVote {
  UP
  DOWN
}

model Vote {
  id String @id @default(uuid())

  postId String
  post Post @relation(fields: [postId], references: [id])

  userId String
  user User @relation(fields: [userId], references: [id])

  voteType TypeOfVote

}
